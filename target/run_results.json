{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.1", "generated_at": "2025-06-17T16:11:39.235482Z", "invocation_id": "5f7ea1f1-d2b1-4781-8cb8-d6d6759cadc4", "invocation_started_at": "2025-06-17T16:11:35.021954Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T16:11:37.517988Z", "completed_at": "2025-06-17T16:11:37.526372Z"}, {"name": "execute", "started_at": "2025-06-17T16:11:37.526741Z", "completed_at": "2025-06-17T16:11:38.491650Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9745261669158936, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd17cb-0106-9eb9-0000-03a97f916d82"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.GLOBAL_PERFMGT.V_FACT_CONTRACT_PRODUCT_RENT_ROLL_FOR_VACANCY", "compiled": true, "compiled_code": "\n\nselect \n PC_ID,\n PRODUCT_EXT_REF,\n CONTRACT_ID,\nBU_EXTREF ,\n    case  when  SCENARIOS_RR like 'CLOSING4_%'\n       then '01/01/'||year(current_date) \n     else    '01/01/'||year(dateadd(year,1,current_date)) end YM_START ,\n    case  when  SCENARIOS_RR like 'CLOSING4_%'\n       then '31/12/'||year(current_date) \n     else   '31/12/'||year(dateadd(year,1,current_date)) end   YM_END ,\n         currency, \n        indicator_name KPI_TYPE, \n        --indicator_denum,\n        indicator_num  KPI_AMOUNT,\n        'CONTRACT_PRODUCT' FACT_TYPE \n--*  exclude (key_r,deleted,timestamp) \nfrom EXPOSE_DEV.DPERFMGT.V_DIM_RENT_ROLL_FOR_VACANCY dim \njoin (\n    select  key_r, \n        currency, \n        indicator_name, \n        indicator_denum,\n        indicator_num\nfrom EXPOSE.DPERFMGT.PLANIT_OPERATION_CUBE_RENT_ROLL_FOR_VACANCY_W_CURRENCY_AGG\nunion all\nselect key_r, \n        null currency, \n        indicator_name, \n        indicator_denum,\n        indicator_num \nfrom EXPOSE.DPERFMGT.PLANIT_OPERATION_CUBE_RENT_ROLL_FOR_VACANCY_Wo_CURRENCY_AGG\n) kpi on kpi.key_r=dim.key_r\n where \n dim.status =  'Occupied'\n--where --cscenario='FORECAST2' and  --cpropc='FR-SC-150' \n\n--cutoffcalmonth='202506'\n--and clease='F106/11000186_SC'", "relation_name": "expose_dev.dpulse.V_FACT_CONTRACT_PRODUCT_RENT_ROLL_FOR_VACANCY", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-17T16:11:37.523385Z", "completed_at": "2025-06-17T16:11:37.536583Z"}, {"name": "execute", "started_at": "2025-06-17T16:11:37.552355Z", "completed_at": "2025-06-17T16:11:38.733295Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2107999324798584, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bd17cb-0106-9eb9-0000-03a97f916d7e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.GLOBAL_PERFMGT.crm_deal_quote_relevant", "compiled": true, "compiled_code": "\n\nWITH LT_10 AS (\n\tSELECT \n\t\td.opportunityid, \n\t\td.id,\n\t\tq.quoteid,\n\t\t'10' fact_prog,\n\t\tq.name,\n\t\tq.createdon quote_createon,\n\t\tCASE WHEN MAX(q.createdon) OVER (PARTITION BY d.opportunityid) = q.createdon \n\t\t\tTHEN true \n\t\t\tELSE false \n\t\tEND filter,\n\t\tTO_CHAR(quote_createon,'YYYYMM') YM_START,\n\t\tNVL(TO_CHAR(datefinancialproposalagreed,'YYYYMM'),'999912') YM_END\n\t\t/*,progressiontech, datefinancialproposalagreed, datevalidated, datelegalagreement, d.createdon deal_createon, landlordsignaturedate, signaturedate,*/\n\tFROM finops.dwh.crm_deal d \n\tLEFT JOIN finops.dwh.crm_quote q ON q.opportunityid = d.opportunityid\n\tWHERE --d.opportunityid='8602e810-0cb6-ee11-a569-000d3ab4b3e6' --'f1b05667-7d41-4bbc-9925-58e99d03ec9c' \n    --and \n    q.typecode ='809020000' --quote fin\n    AND \n\t\t(q.createdon< DATEADD(minute, 59, datefinancialproposalagreed ) \n\t\tOR datefinancialproposalagreed IS NULL)\n\tQUALIFY filter = true\n)\n, LT_50 AS (\n\tSELECT \n\t\td.opportunityid, \n\t\td.id,\n\t\tq.quoteid,\n\t\t'50' fact_prog,\n\t\tq.name,\n\t\tq.createdon quote_createon,\n\t\tCASE WHEN min(q.createdon) OVER (PARTITION BY d.opportunityid) = q.createdon\n\t\t\tTHEN true \n\t\t\tELSE false \n\t\tEND filter,\n\t\tTO_CHAR(quote_createon,'YYYYMM') YM_START,\n\t\tNVL(TO_CHAR(datevalidated,'YYYYMM'),'999912') YM_END\n\t\t/*,progressiontech, datefinancialproposalagreed, datevalidated, datelegalagreement, d.createdon deal_createon, landlordsignaturedate, signaturedate,*/\n\tFROM finops.dwh.crm_deal d \n\tLEFT JOIN finops.dwh.crm_quote q ON q.opportunityid = d.opportunityid\n\tWHERE-- d.opportunityid='f1b05667-7d41-4bbc-9925-58e99d03ec9c'--'5b6b7053-7c73-4c7c-bd57-3fbf65bf46e9' AND\n\t\t(q.createdon< DATEADD(minute, 59, datevalidated)\n\t\tOR datevalidated IS NULL)\n\t\tAND progressiontech >= 50\n\t\tAND statereasoncode IN ('809020006','809020008') -- premiere quote vali\u00e9\n        and  q.typecode !='809020000' -- pas quote fin quote fin\n\tQUALIFY filter = true\n)\n, LT_70 AS (\n\tSELECT \n\t\td.opportunityid, \n\t\td.id,\n\t\tq.quoteid,\n\t\t'70' fact_prog,\n\t\tq.name,\n\t\tq.createdon quote_createon,\n\t\tCASE WHEN max(q.createdon) OVER (PARTITION BY d.opportunityid) = q.createdon \n\t\t\tTHEN true \n\t\t\tELSE false \n\t\tEND filter,\n\t\tTO_CHAR(quote_createon,'YYYYMM') YM_START,\n\t\tNVL(TO_CHAR(datelegalagreement,'YYYYMM'),'999912') YM_END\n\t\t/*,progressiontech, datefinancialproposalagreed, datevalidated, datelegalagreement, d.createdon deal_createon, landlordsignaturedate, signaturedate,*/\n\tFROM finops.dwh.crm_deal d \n\tLEFT JOIN finops.dwh.crm_quote q ON q.opportunityid = d.opportunityid\n\tWHERE --d.opportunityid='f1b05667-7d41-4bbc-9925-58e99d03ec9c'--'5b6b7053-7c73-4c7c-bd57-3fbf65bf46e9' AND\n\t\t(q.createdon< DATEADD(minute, 59, datelegalagreement)\n\t\tOR datelegalagreement IS NULL)\n\t\tAND progressiontech >= 70\n           and  q.typecode !='809020000' -- pas quote fin quote fin\n\tQUALIFY filter = true\n)\n, LT_90 AS (\n\tSELECT \n\t\td.opportunityid, \n\t\td.id,\n\t\tq.quoteid,\n\t\t'90' fact_prog,\n\t\tq.name,\n\t\tq.createdon quote_createon,\n\t\tCASE WHEN max(q.createdon) OVER (PARTITION BY d.opportunityid) = q.createdon \n\t\t\tTHEN true \n\t\t\tELSE false \n\t\tEND filter,\n\t\tTO_CHAR(quote_createon,'YYYYMM') YM_START,\n\t\tNVL(TO_CHAR(signaturedate,'YYYYMM'),'999912') YM_END\n\t\t/*,progressiontech, datefinancialproposalagreed, datevalidated, datelegalagreement, d.createdon deal_createon, landlordsignaturedate, signaturedate,*/\n\tFROM finops.dwh.crm_deal d \n\tLEFT JOIN finops.dwh.crm_quote q ON q.opportunityid = d.opportunityid\n\tWHERE --d.opportunityid='11f976ee-4999-4f6c-beb9-12ee458a8df6'--'5b6b7053-7c73-4c7c-bd57-3fbf65bf46e9' AND \n\t\t(q.createdon< DATEADD(minute, -1, signaturedate)\n\t\tOR signaturedate IS NULL)\n\t\tAND progressiontech >= 90\n           and  q.typecode !='809020000' -- pas quote fin quote fin\n\tQUALIFY filter = true\n)\n, LT_100 AS (\n\tSELECT \n\t\td.opportunityid, \n\t\td.id,\n\t\tq.quoteid,\n\t\t'100' fact_prog,\n\t\tq.name,\n\t\tq.createdon quote_createon,\n\t\ttrue filter,\n\t\tTO_CHAR(quote_createon,'YYYYMM') YM_START,\n\t\tNVL(TO_CHAR(signaturedate,'YYYYMM'),'999912') YM_END\n\t\t/*,progressiontech, datefinancialproposalagreed, datevalidated, datelegalagreement, d.createdon deal_createon, landlordsignaturedate, signaturedate,*/\n\tFROM finops.dwh.crm_deal d \n\t left JOIN finops.dwh.crm_quote q ON q.opportunityid = d.opportunityid AND \n    d.quoteid = q.quoteid\n\tWHERE --d.opportunityid='6d4a9d80-bd0b-ef11-9f89-000d3abaebc4' AND\n\t\tprogressiontech = 100\n)\nSELECT * exclude(filter)\nFROM\n(\n\tSELECT * FROM LT_10\n\tUNION ALL\n\tSELECT * FROM LT_50\n\tUNION ALL\n\tSELECT * FROM LT_70\n\tUNION ALL\n\tSELECT * FROM LT_90\n\tUNION ALL\n\tSELECT * FROM LT_100)", "relation_name": "expose_dev.dpulse.crm_deal_quote_relevant", "batch_results": null}], "elapsed_time": 3.1444127559661865, "args": {"require_batched_execution_for_custom_microbatch_strategy": false, "show_resource_report": false, "skip_nodes_if_on_run_start_fails": false, "state_modified_compare_more_unrendered_values": false, "upload_to_artifacts_ingest_api": false, "use_fast_test_edges": false, "which": "run", "partial_parse_file_diff": true, "write_json": true, "select": [], "strict_mode": false, "empty": false, "populate_cache": true, "exclude": [], "print": true, "state_modified_compare_vars": false, "version_check": true, "indirect_selection": "eager", "project_dir": "C:\\Users\\alban.homo\\dev\\dperfmgt\\global_perfmgt", "defer": false, "favor_state": false, "introspect": true, "use_colors_file": true, "log_path": "C:\\Users\\alban.homo\\dev\\dperfmgt\\global_perfmgt\\logs", "send_anonymous_usage_stats": true, "log_format_file": "debug", "log_file_max_bytes": 10485760, "macro_debugging": false, "log_format": "default", "require_yaml_configuration_for_mf_time_spines": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "profiles_dir": "C:\\Users\\alban.homo\\.dbt", "show_all_deprecations": false, "cache_selected_only": false, "partial_parse": true, "printer_width": 80, "static_parser": true, "log_level_file": "debug", "source_freshness_run_project_hooks": true, "require_nested_cumulative_type_params": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_level": "info", "use_colors": true, "validate_macro_args": false, "vars": {}, "quiet": false, "invocation_command": "dbt run", "require_resource_names_without_spaces": true, "require_all_warnings_handled_by_warn_error": false}}